package ch.digorydoo.titanium.engine.brick

import ch.digorydoo.titanium.engine.brick.BrickShape.*
import ch.digorydoo.titanium.engine.brick.bar.*
import ch.digorydoo.titanium.engine.brick.bevel.*
import ch.digorydoo.titanium.engine.brick.inverse_ramp.InverseRampRunEastModel
import ch.digorydoo.titanium.engine.brick.inverse_ramp.InverseRampRunNorthModel
import ch.digorydoo.titanium.engine.brick.inverse_ramp.InverseRampRunSouthModel
import ch.digorydoo.titanium.engine.brick.inverse_ramp.InverseRampRunWestModel
import ch.digorydoo.titanium.engine.brick.ramp.*
import ch.digorydoo.titanium.engine.brick.stairs.*
import ch.digorydoo.titanium.engine.brick.wall.*
import ch.digorydoo.titanium.engine.brick.zz_various.BlockModel
import ch.digorydoo.titanium.engine.brick.zz_various.CutModel
import ch.digorydoo.titanium.engine.brick.zz_various.FlatFaceModel
import ch.digorydoo.titanium.engine.brick.zz_various.UprightTubeModel

class BrickModelHolder {
    private var barFrameEast: BarFrameWEModel? = null
    private var barFrameNorth: BarFrameNSModel? = null
    private var barFrameSouth: BarFrameNSModel? = null
    private var barFrameWest: BarFrameWEModel? = null
    private var bevelEE: BevelEEModel? = null
    private var bevelEast: BevelEastModel? = null
    private var bevelNE: BevelNEModel? = null
    private var bevelNN: BevelNNModel? = null
    private var bevelNS: BevelNSModel? = null
    private var bevelNW: BevelNWModel? = null
    private var bevelNorth: BevelNorthModel? = null
    private var bevelSE: BevelSEModel? = null
    private var bevelSS: BevelSSModel? = null
    private var bevelSW: BevelSWModel? = null
    private var bevelSouth: BevelSouthModel? = null
    private var bevelWE: BevelWEModel? = null
    private var bevelWW: BevelWWModel? = null
    private var bevelWest: BevelWestModel? = null
    private var block: BlockModel? = null
    private var flatCeiling: FlatFaceModel? = null
    private var flatFloor: FlatFaceModel? = null
    private var flatWallEast: FlatFaceModel? = null
    private var flatWallNorth: FlatFaceModel? = null
    private var flatWallSouth: FlatFaceModel? = null
    private var flatWallWest: FlatFaceModel? = null
    private var halfDHighBarE: BlockModel? = null
    private var halfDHighBarN: BlockModel? = null
    private var halfDHighBarS: BlockModel? = null
    private var halfDHighBarW: BlockModel? = null
    private var halfDWallCornerNE: WallCornerNEModel? = null
    private var halfDWallCornerNW: WallCornerNWModel? = null
    private var halfDWallCornerSE: WallCornerSEModel? = null
    private var halfDWallCornerSW: WallCornerSWModel? = null
    private var halfDWallEast: BlockModel? = null
    private var halfDWallNorth: BlockModel? = null
    private var halfDWallSouth: BlockModel? = null
    private var halfDWallTopEast: WallTopEastModel? = null
    private var halfDWallTopNorth: WallTopNorthModel? = null
    private var halfDWallTopSouth: WallTopSouthModel? = null
    private var halfDWallTopWest: WallTopWestModel? = null
    private var halfDWallWest: BlockModel? = null
    private var halfHCeiling: BlockModel? = null
    private var halfHCeilingVCutNE: CutModel? = null
    private var halfHCeilingVCutNW: CutModel? = null
    private var halfHCeilingVCutSE: CutModel? = null
    private var halfHCeilingVCutSW: CutModel? = null
    private var halfHFloor: BlockModel? = null
    private var halfHFloorVCutNE: CutModel? = null
    private var halfHFloorVCutNW: CutModel? = null
    private var halfHFloorVCutSE: CutModel? = null
    private var halfHFloorVCutSW: CutModel? = null
    private var halfRampTopE: BlockModel? = null
    private var halfRampTopN: BlockModel? = null
    private var halfRampTopS: BlockModel? = null
    private var halfRampTopW: BlockModel? = null
    private var hdWallCornerTopNE: WallCornerNEModel? = null
    private var hdWallCornerTopNW: WallCornerNWModel? = null
    private var hdWallCornerTopSE: WallCornerSEModel? = null
    private var hdWallCornerTopSW: WallCornerSWModel? = null
    private var highBarEast: BlockModel? = null
    private var highBarNorth: BlockModel? = null
    private var highBarSouth: BlockModel? = null
    private var highBarWest: BlockModel? = null
    private var invRampRunEast: InverseRampRunEastModel? = null
    private var invRampRunNorth: InverseRampRunNorthModel? = null
    private var invRampRunSouth: InverseRampRunSouthModel? = null
    private var invRampRunWest: InverseRampRunWestModel? = null
    private var lowBarEast: BlockModel? = null
    private var lowBarNS: BlockModel? = null
    private var lowBarNorth: BlockModel? = null
    private var lowBarSouth: BlockModel? = null
    private var lowBarWE: BlockModel? = null
    private var lowBarWest: BlockModel? = null
    private var octaUprightPillar: UprightTubeModel? = null
    private var rampCornerNE: RampCornerNEModel? = null
    private var rampCornerNEAlt: RampCornerNEAltModel? = null
    private var rampCornerNW: RampCornerNWModel? = null
    private var rampCornerNWAlt: RampCornerNWAltModel? = null
    private var rampCornerSE: RampCornerSEModel? = null
    private var rampCornerSEAlt: RampCornerSEAltModel? = null
    private var rampCornerSW: RampCornerSWModel? = null
    private var rampCornerSWAlt: RampCornerSWAltModel? = null
    private var rampRunEast: RampRunEastModel? = null
    private var rampRunNorth: RampRunNorthModel? = null
    private var rampRunSouth: RampRunSouthModel? = null
    private var rampRunWest: RampRunWestModel? = null
    private var stairsRunEast: StairsRunEastModel? = null
    private var stairsRunNorth: StairsRunNorthModel? = null
    private var stairsRunSouth: StairsRunSouthModel? = null
    private var stairsRunWest: StairsRunWestModel? = null
    private var straightStairsEast: StraightStairsModel? = null
    private var straightStairsNorth: StraightStairsModel? = null
    private var straightStairsSouth: StraightStairsModel? = null
    private var straightStairsWest: StraightStairsModel? = null
    private var thckHalfHHighBarE: BlockModel? = null
    private var thckHalfHHighBarN: BlockModel? = null
    private var thckHalfHHighBarS: BlockModel? = null
    private var thckHalfHHighBarW: BlockModel? = null
    private var thckHalfHLowBarE: BlockModel? = null
    private var thckHalfHLowBarN: BlockModel? = null
    private var thckHalfHLowBarS: BlockModel? = null
    private var thckHalfHLowBarW: BlockModel? = null
    private var thckWllCornerTopNE: WallCornerNEModel? = null
    private var thckWllCornerTopNW: WallCornerNWModel? = null
    private var thckWllCornerTopSE: WallCornerSEModel? = null
    private var thckWllCornerTopSW: WallCornerSWModel? = null
    private var thickCeiling: BlockModel? = null
    private var thickCeilingVCutNE: CutModel? = null
    private var thickCeilingVCutNW: CutModel? = null
    private var thickCeilingVCutSE: CutModel? = null
    private var thickCeilingVCutSW: CutModel? = null
    private var thickFloor: BlockModel? = null
    private var thickFloorVCutNE: CutModel? = null
    private var thickFloorVCutNW: CutModel? = null
    private var thickFloorVCutSE: CutModel? = null
    private var thickFloorVCutSW: CutModel? = null
    private var thickHighBarE: BlockModel? = null
    private var thickHighBarN: BlockModel? = null
    private var thickHighBarS: BlockModel? = null
    private var thickHighBarW: BlockModel? = null
    private var thickWallCornerNE: WallCornerNEModel? = null
    private var thickWallCornerNW: WallCornerNWModel? = null
    private var thickWallCornerSE: WallCornerSEModel? = null
    private var thickWallCornerSW: WallCornerSWModel? = null
    private var thickWallEast: BlockModel? = null
    private var thickWallNorth: BlockModel? = null
    private var thickWallSouth: BlockModel? = null
    private var thickWallTopEast: WallTopEastModel? = null
    private var thickWallTopNorth: WallTopNorthModel? = null
    private var thickWallTopSouth: WallTopSouthModel? = null
    private var thickWallTopWest: WallTopWestModel? = null
    private var thickWallWest: BlockModel? = null
    private var thinWallCornerNE: WallCornerNEModel? = null
    private var thinWallCornerNW: WallCornerNWModel? = null
    private var thinWallCornerSE: WallCornerSEModel? = null
    private var thinWallCornerSW: WallCornerSWModel? = null
    private var thinWallDiagonalNE: DiagonalWallNEModel? = null
    private var thinWallDiagonalNW: DiagonalWallNWModel? = null
    private var thinWallDiagonalSE: DiagonalWallSEModel? = null
    private var thinWallDiagonalSW: DiagonalWallSWModel? = null
    private var thinWallEast: BlockModel? = null
    private var thinWallNorth: BlockModel? = null
    private var thinWallSouth: BlockModel? = null
    private var thinWallTopEast: WallTopEastModel? = null
    private var thinWallTopNorth: WallTopNorthModel? = null
    private var thinWallTopSouth: WallTopSouthModel? = null
    private var thinWallTopWest: WallTopWestModel? = null
    private var thinWallWest: BlockModel? = null
    private var thinWllCornerTopNE: WallCornerNEModel? = null
    private var thinWllCornerTopNW: WallCornerNWModel? = null
    private var thinWllCornerTopSE: WallCornerSEModel? = null
    private var thinWllCornerTopSW: WallCornerSWModel? = null
    private var upriteBarNE: BlockModel? = null
    private var upriteBarNW: BlockModel? = null
    private var upriteBarSE: BlockModel? = null
    private var upriteBarSW: BlockModel? = null
    private var upriteDblBarEast: UprightDblBarEastModel? = null
    private var upriteDblBarNorth: UprightDblBarNorthModel? = null
    private var upriteDblBarSouth: UprightDblBarSouthModel? = null
    private var upriteDblBarWest: UprightDblBarWestModel? = null
    private var vertBevelEast: CutModel? = null
    private var vertBevelFull: CutModel? = null
    private var vertBevelFullAlt: CutModel? = null
    private var vertBevelNE: CutModel? = null
    private var vertBevelNW: CutModel? = null
    private var vertBevelNorth: CutModel? = null
    private var vertBevelSE: CutModel? = null
    private var vertBevelSW: CutModel? = null
    private var vertBevelSouth: CutModel? = null
    private var vertBevelWest: CutModel? = null
    private var vertCutNE: CutModel? = null
    private var vertCutNW: CutModel? = null
    private var vertCutSE: CutModel? = null
    private var vertCutSW: CutModel? = null
    private var windingStairsEN: WindingStairsModel? = null
    private var windingStairsES: WindingStairsModel? = null
    private var windingStairsHiEN: WindingStairsModel? = null
    private var windingStairsHiES: WindingStairsModel? = null
    private var windingStairsHiNE: WindingStairsModel? = null
    private var windingStairsHiNW: WindingStairsModel? = null
    private var windingStairsHiSE: WindingStairsModel? = null
    private var windingStairsHiSW: WindingStairsModel? = null
    private var windingStairsHiWN: WindingStairsModel? = null
    private var windingStairsHiWS: WindingStairsModel? = null
    private var windingStairsLoEN: WindingStairsModel? = null
    private var windingStairsLoES: WindingStairsModel? = null
    private var windingStairsLoNE: WindingStairsModel? = null
    private var windingStairsLoNW: WindingStairsModel? = null
    private var windingStairsLoSE: WindingStairsModel? = null
    private var windingStairsLoSW: WindingStairsModel? = null
    private var windingStairsLoWN: WindingStairsModel? = null
    private var windingStairsLoWS: WindingStairsModel? = null
    private var windingStairsNE: WindingStairsModel? = null
    private var windingStairsNW: WindingStairsModel? = null
    private var windingStairsSE: WindingStairsModel? = null
    private var windingStairsSW: WindingStairsModel? = null
    private var windingStairsWN: WindingStairsModel? = null
    private var windingStairsWS: WindingStairsModel? = null
    private var windowTopLEast: BlockModel? = null
    private var windowTopLNorth: BlockModel? = null
    private var windowTopLSouth: BlockModel? = null
    private var windowTopLWest: BlockModel? = null
    private var windowTopREast: BlockModel? = null
    private var windowTopRNorth: BlockModel? = null
    private var windowTopRSouth: BlockModel? = null
    private var windowTopRWest: BlockModel? = null

    fun get(shape: BrickShape): AbstrBrickModel? =
        when (shape) {
            NONE -> null
            BASIC_BLOCK -> block ?: BlockModel().also { block = it }
            BAR_FRAME_NORTH -> barFrameNorth ?: makeBarFrameNorth().also { barFrameNorth = it }
            BAR_FRAME_EAST -> barFrameEast ?: makeBarFrameEast().also { barFrameEast = it }
            BAR_FRAME_SOUTH -> barFrameSouth ?: makeBarFrameSouth().also { barFrameSouth = it }
            BAR_FRAME_WEST -> barFrameWest ?: makeBarFrameWest().also { barFrameWest = it }
            BEVEL_NORTH -> bevelNorth ?: BevelNorthModel().also { bevelNorth = it }
            BEVEL_EAST -> bevelEast ?: BevelEastModel().also { bevelEast = it }
            BEVEL_SOUTH -> bevelSouth ?: BevelSouthModel().also { bevelSouth = it }
            BEVEL_WEST -> bevelWest ?: BevelWestModel().also { bevelWest = it }
            BEVEL_NN -> bevelNN ?: BevelNNModel().also { bevelNN = it }
            BEVEL_EE -> bevelEE ?: BevelEEModel().also { bevelEE = it }
            BEVEL_SS -> bevelSS ?: BevelSSModel().also { bevelSS = it }
            BEVEL_WW -> bevelWW ?: BevelWWModel().also { bevelWW = it }
            BEVEL_NE -> bevelNE ?: BevelNEModel().also { bevelNE = it }
            BEVEL_NS -> bevelNS ?: BevelNSModel().also { bevelNS = it }
            BEVEL_NW -> bevelNW ?: BevelNWModel().also { bevelNW = it }
            BEVEL_SE -> bevelSE ?: BevelSEModel().also { bevelSE = it }
            BEVEL_SW -> bevelSW ?: BevelSWModel().also { bevelSW = it }
            BEVEL_WE -> bevelWE ?: BevelWEModel().also { bevelWE = it }
            FLAT_CEILING -> flatCeiling ?: FlatFaceModel().also { flatCeiling = it }
            FLAT_FLOOR -> flatFloor ?: FlatFaceModel().also { flatFloor = it }
            FLAT_WALL_EAST -> flatWallEast ?: FlatFaceModel().also { flatWallEast = it }
            FLAT_WALL_NORTH -> flatWallNorth ?: FlatFaceModel().also { flatWallNorth = it }
            FLAT_WALL_SOUTH -> flatWallSouth ?: FlatFaceModel().also { flatWallSouth = it }
            FLAT_WALL_WEST -> flatWallWest ?: FlatFaceModel().also { flatWallWest = it }
            HALFD_HIGH_BAR_EAST -> halfDHighBarE ?: makeHalfDHighBarE().also { halfDHighBarE = it }
            HALFD_HIGH_BAR_NORTH -> halfDHighBarN ?: makeHalfDHighBarN().also { halfDHighBarN = it }
            HALFD_HIGH_BAR_SOUTH -> halfDHighBarS ?: makeHalfDHighBarS().also { halfDHighBarS = it }
            HALFD_HIGH_BAR_WEST -> halfDHighBarW ?: makeHalfDHighBarW().also { halfDHighBarW = it }
            HALFD_WALL_CORNER_NE -> halfDWallCornerNE ?: makeHalfDWallCornerNE().also { halfDWallCornerNE = it }
            HALFD_WALL_CORNER_NW -> halfDWallCornerNW ?: makeHalfDWallCornerNW().also { halfDWallCornerNW = it }
            HALFD_WALL_CORNER_SE -> halfDWallCornerSE ?: makeHalfDWallCornerSE().also { halfDWallCornerSE = it }
            HALFD_WALL_CORNER_SW -> halfDWallCornerSW ?: makeHalfDWallCornerSW().also { halfDWallCornerSW = it }
            HALFD_WALL_CORNER_TOP_NE -> hdWallCornerTopNE ?: makeHalfDWallCornerTopNE().also { hdWallCornerTopNE = it }
            HALFD_WALL_CORNER_TOP_NW -> hdWallCornerTopNW ?: makeHalfDWallCornerTopNW().also { hdWallCornerTopNW = it }
            HALFD_WALL_CORNER_TOP_SE -> hdWallCornerTopSE ?: makeHalfDWallCornerTopSE().also { hdWallCornerTopSE = it }
            HALFD_WALL_CORNER_TOP_SW -> hdWallCornerTopSW ?: makeHalfDWallCornerTopSW().also { hdWallCornerTopSW = it }
            HALFD_WALL_EAST -> halfDWallEast ?: makeHalfDWallEast().also { halfDWallEast = it }
            HALFD_WALL_NORTH -> halfDWallNorth ?: makeHalfDWallNorth().also { halfDWallNorth = it }
            HALFD_WALL_SOUTH -> halfDWallSouth ?: makeHalfDWallSouth().also { halfDWallSouth = it }
            HALFD_WALL_TOP_EAST -> halfDWallTopEast ?: makeHalfDWallTopEast().also { halfDWallTopEast = it }
            HALFD_WALL_TOP_NORTH -> halfDWallTopNorth ?: makeHalfDWallTopNorth().also { halfDWallTopNorth = it }
            HALFD_WALL_TOP_SOUTH -> halfDWallTopSouth ?: makeHalfDWallTopSouth().also { halfDWallTopSouth = it }
            HALFD_WALL_TOP_WEST -> halfDWallTopWest ?: makeHalfDWallTopWest().also { halfDWallTopWest = it }
            HALFD_WALL_WEST -> halfDWallWest ?: makeHalfDWallWest().also { halfDWallWest = it }
            HALFH_CEILING -> halfHCeiling ?: makeHalfHCeiling().also { halfHCeiling = it }
            HALFH_FLOOR -> halfHFloor ?: makeHalfHFloor().also { halfHFloor = it }
            HALFH_CEILING_V_CUT_NE -> halfHCeilingVCutNE ?: makeHalfHCeilingVCutNE().also { halfHCeilingVCutNE = it }
            HALFH_CEILING_V_CUT_NW -> halfHCeilingVCutNW ?: makeHalfHCeilingVCutNW().also { halfHCeilingVCutNW = it }
            HALFH_CEILING_V_CUT_SE -> halfHCeilingVCutSE ?: makeHalfHCeilingVCutSE().also { halfHCeilingVCutSE = it }
            HALFH_CEILING_V_CUT_SW -> halfHCeilingVCutSW ?: makeHalfHCeilingVCutSW().also { halfHCeilingVCutSW = it }
            HALFH_FLOOR_V_CUT_NE -> halfHFloorVCutNE ?: makeHalfHFloorVCutNE().also { halfHFloorVCutNE = it }
            HALFH_FLOOR_V_CUT_NW -> halfHFloorVCutNW ?: makeHalfHFloorVCutNW().also { halfHFloorVCutNW = it }
            HALFH_FLOOR_V_CUT_SE -> halfHFloorVCutSE ?: makeHalfHFloorVCutSE().also { halfHFloorVCutSE = it }
            HALFH_FLOOR_V_CUT_SW -> halfHFloorVCutSW ?: makeHalfHFloorVCutSW().also { halfHFloorVCutSW = it }
            HALF_RAMP_TOP_EAST -> halfRampTopE ?: makeHalfRampTopE().also { halfRampTopE = it }
            HALF_RAMP_TOP_NORTH -> halfRampTopN ?: makeHalfRampTopN().also { halfRampTopN = it }
            HALF_RAMP_TOP_SOUTH -> halfRampTopS ?: makeHalfRampTopS().also { halfRampTopS = it }
            HALF_RAMP_TOP_WEST -> halfRampTopW ?: makeHalfRampTopW().also { halfRampTopW = it }
            HIGH_BAR_EAST -> highBarEast ?: makeHighBarEast().also { highBarEast = it }
            HIGH_BAR_NORTH -> highBarNorth ?: makeHighBarNorth().also { highBarNorth = it }
            HIGH_BAR_SOUTH -> highBarSouth ?: makeHighBarSouth().also { highBarSouth = it }
            HIGH_BAR_WEST -> highBarWest ?: makeHighBarWest().also { highBarWest = it }
            INVERSE_RAMP_RUN_EAST -> invRampRunEast ?: InverseRampRunEastModel().also { invRampRunEast = it }
            INVERSE_RAMP_RUN_NORTH -> invRampRunNorth ?: InverseRampRunNorthModel().also { invRampRunNorth = it }
            INVERSE_RAMP_RUN_SOUTH -> invRampRunSouth ?: InverseRampRunSouthModel().also { invRampRunSouth = it }
            INVERSE_RAMP_RUN_WEST -> invRampRunWest ?: InverseRampRunWestModel().also { invRampRunWest = it }
            LOW_BAR_EAST -> lowBarEast ?: makeLowBarEast().also { lowBarEast = it }
            LOW_BAR_NORTH -> lowBarNorth ?: makeLowBarNorth().also { lowBarNorth = it }
            LOW_BAR_NS -> lowBarNS ?: makeLowBarNS().also { lowBarNS = it }
            LOW_BAR_SOUTH -> lowBarSouth ?: makeLowBarSouth().also { lowBarSouth = it }
            LOW_BAR_WE -> lowBarWE ?: makeLowBarWE().also { lowBarWE = it }
            LOW_BAR_WEST -> lowBarWest ?: makeLowBarWest().also { lowBarWest = it }
            OCTAGONAL_UPRIGHT_PILLAR -> octaUprightPillar ?: makeOctaUprightPillar().also { octaUprightPillar = it }
            RAMP_CORNER_NE -> rampCornerNE ?: RampCornerNEModel().also { rampCornerNE = it }
            RAMP_CORNER_NE_ALT -> rampCornerNEAlt ?: RampCornerNEAltModel().also { rampCornerNEAlt = it }
            RAMP_CORNER_NW -> rampCornerNW ?: RampCornerNWModel().also { rampCornerNW = it }
            RAMP_CORNER_NW_ALT -> rampCornerNWAlt ?: RampCornerNWAltModel().also { rampCornerNWAlt = it }
            RAMP_CORNER_SE -> rampCornerSE ?: RampCornerSEModel().also { rampCornerSE = it }
            RAMP_CORNER_SE_ALT -> rampCornerSEAlt ?: RampCornerSEAltModel().also { rampCornerSEAlt = it }
            RAMP_CORNER_SW -> rampCornerSW ?: RampCornerSWModel().also { rampCornerSW = it }
            RAMP_CORNER_SW_ALT -> rampCornerSWAlt ?: RampCornerSWAltModel().also { rampCornerSWAlt = it }
            RAMP_RUN_EAST -> rampRunEast ?: RampRunEastModel().also { rampRunEast = it }
            RAMP_RUN_NORTH -> rampRunNorth ?: RampRunNorthModel().also { rampRunNorth = it }
            RAMP_RUN_SOUTH -> rampRunSouth ?: RampRunSouthModel().also { rampRunSouth = it }
            RAMP_RUN_WEST -> rampRunWest ?: RampRunWestModel().also { rampRunWest = it }
            STAIRS_RUN_EAST -> stairsRunEast ?: StairsRunEastModel().also { stairsRunEast = it }
            STAIRS_RUN_NORTH -> stairsRunNorth ?: StairsRunNorthModel().also { stairsRunNorth = it }
            STAIRS_RUN_SOUTH -> stairsRunSouth ?: StairsRunSouthModel().also { stairsRunSouth = it }
            STAIRS_RUN_WEST -> stairsRunWest ?: StairsRunWestModel().also { stairsRunWest = it }
            STRAIGHT_STAIRS_EAST -> straightStairsEast ?: makeStraightStairsEast().also { straightStairsEast = it }
            STRAIGHT_STAIRS_NORTH -> straightStairsNorth ?: makeStraightStairsNorth().also { straightStairsNorth = it }
            STRAIGHT_STAIRS_SOUTH -> straightStairsSouth ?: makeStraightStairsSouth().also { straightStairsSouth = it }
            STRAIGHT_STAIRS_WEST -> straightStairsWest ?: makeStraightStairsWest().also { straightStairsWest = it }
            THICK_CEILING -> thickCeiling ?: makeThickCeiling().also { thickCeiling = it }
            THICK_CEILING_V_CUT_NE -> thickCeilingVCutNE ?: makeThickCeilingVCutNE().also { thickCeilingVCutNE = it }
            THICK_CEILING_V_CUT_NW -> thickCeilingVCutNW ?: makeThickCeilingVCutNW().also { thickCeilingVCutNW = it }
            THICK_CEILING_V_CUT_SE -> thickCeilingVCutSE ?: makeThickCeilingVCutSE().also { thickCeilingVCutSE = it }
            THICK_CEILING_V_CUT_SW -> thickCeilingVCutSW ?: makeThickCeilingVCutSW().also { thickCeilingVCutSW = it }
            THICK_FLOOR -> thickFloor ?: makeThickFloor().also { thickFloor = it }
            THICK_FLOOR_V_CUT_NE -> thickFloorVCutNE ?: makeThickFloorVCutNE().also { thickFloorVCutNE = it }
            THICK_FLOOR_V_CUT_NW -> thickFloorVCutNW ?: makeThickFloorVCutNW().also { thickFloorVCutNW = it }
            THICK_FLOOR_V_CUT_SE -> thickFloorVCutSE ?: makeThickFloorVCutSE().also { thickFloorVCutSE = it }
            THICK_FLOOR_V_CUT_SW -> thickFloorVCutSW ?: makeThickFloorVCutSW().also { thickFloorVCutSW = it }
            THICK_HALFH_HIGH_BAR_EAST -> thckHalfHHighBarE ?: makeThickHalfHHighBarE().also { thckHalfHHighBarE = it }
            THICK_HALFH_HIGH_BAR_NORTH -> thckHalfHHighBarN ?: makeThickHalfHHighBarN().also { thckHalfHHighBarN = it }
            THICK_HALFH_HIGH_BAR_SOUTH -> thckHalfHHighBarS ?: makeThickHalfHHighBarS().also { thckHalfHHighBarS = it }
            THICK_HALFH_HIGH_BAR_WEST -> thckHalfHHighBarW ?: makeThickHalfHHighBarW().also { thckHalfHHighBarW = it }
            THICK_HALFH_LOW_BAR_EAST -> thckHalfHLowBarE ?: makeThickHalfHLowBarE().also { thckHalfHLowBarE = it }
            THICK_HALFH_LOW_BAR_NORTH -> thckHalfHLowBarN ?: makeThickHalfHLowBarN().also { thckHalfHLowBarN = it }
            THICK_HALFH_LOW_BAR_SOUTH -> thckHalfHLowBarS ?: makeThickHalfHLowBarS().also { thckHalfHLowBarS = it }
            THICK_HALFH_LOW_BAR_WEST -> thckHalfHLowBarW ?: makeThickHalfHLowBarW().also { thckHalfHLowBarW = it }
            THICK_HIGH_BAR_NORTH -> thickHighBarN ?: makeThickHighBarN().also { thickHighBarN = it }
            THICK_HIGH_BAR_EAST -> thickHighBarE ?: makeThickHighBarE().also { thickHighBarE = it }
            THICK_HIGH_BAR_SOUTH -> thickHighBarS ?: makeThickHighBarS().also { thickHighBarS = it }
            THICK_HIGH_BAR_WEST -> thickHighBarW ?: makeThickHighBarW().also { thickHighBarW = it }
            THICK_WALL_CORNER_NE -> thickWallCornerNE ?: makeThickWallCornerNE().also { thickWallCornerNE = it }
            THICK_WALL_CORNER_NW -> thickWallCornerNW ?: makeThickWallCornerNW().also { thickWallCornerNW = it }
            THICK_WALL_CORNER_SE -> thickWallCornerSE ?: makeThickWallCornerSE().also { thickWallCornerSE = it }
            THICK_WALL_CORNER_SW -> thickWallCornerSW ?: makeThickWallCornerSW().also { thickWallCornerSW = it }
            THICK_WALL_CORNER_TOP_NE -> thckWllCornerTopNE ?: makeThckWallCornerTopNE().also { thckWllCornerTopNE = it }
            THICK_WALL_CORNER_TOP_NW -> thckWllCornerTopNW ?: makeThckWallCornerTopNW().also { thckWllCornerTopNW = it }
            THICK_WALL_CORNER_TOP_SE -> thckWllCornerTopSE ?: makeThckWallCornerTopSE().also { thckWllCornerTopSE = it }
            THICK_WALL_CORNER_TOP_SW -> thckWllCornerTopSW ?: makeThckWallCornerTopSW().also { thckWllCornerTopSW = it }
            THICK_WALL_EAST -> thickWallEast ?: makeThickWallEast().also { thickWallEast = it }
            THICK_WALL_NORTH -> thickWallNorth ?: makeThickWallNorth().also { thickWallNorth = it }
            THICK_WALL_SOUTH -> thickWallSouth ?: makeThickWallSouth().also { thickWallSouth = it }
            THICK_WALL_TOP_EAST -> thickWallTopEast ?: makeThickWallTopEast().also { thickWallTopEast = it }
            THICK_WALL_TOP_NORTH -> thickWallTopNorth ?: makeThickWallTopNorth().also { thickWallTopNorth = it }
            THICK_WALL_TOP_SOUTH -> thickWallTopSouth ?: makeThickWallTopSouth().also { thickWallTopSouth = it }
            THICK_WALL_TOP_WEST -> thickWallTopWest ?: makeThickWallTopWest().also { thickWallTopWest = it }
            THICK_WALL_WEST -> thickWallWest ?: makeThickWallWest().also { thickWallWest = it }
            THIN_WALL_CORNER_NE -> thinWallCornerNE ?: makeThinWallCornerNE().also { thinWallCornerNE = it }
            THIN_WALL_CORNER_NW -> thinWallCornerNW ?: makeThinWallCornerNW().also { thinWallCornerNW = it }
            THIN_WALL_CORNER_SE -> thinWallCornerSE ?: makeThinWallCornerSE().also { thinWallCornerSE = it }
            THIN_WALL_CORNER_SW -> thinWallCornerSW ?: makeThinWallCornerSW().also { thinWallCornerSW = it }
            THIN_WALL_CORNER_TOP_NE -> thinWllCornerTopNE ?: makeThinWallCornerTopNE().also { thinWllCornerTopNE = it }
            THIN_WALL_CORNER_TOP_NW -> thinWllCornerTopNW ?: makeThinWallCornerTopNW().also { thinWllCornerTopNW = it }
            THIN_WALL_CORNER_TOP_SE -> thinWllCornerTopSE ?: makeThinWallCornerTopSE().also { thinWllCornerTopSE = it }
            THIN_WALL_CORNER_TOP_SW -> thinWllCornerTopSW ?: makeThinWallCornerTopSW().also { thinWllCornerTopSW = it }
            THIN_WALL_DIAGONAL_NE -> thinWallDiagonalNE ?: DiagonalWallNEModel().also { thinWallDiagonalNE = it }
            THIN_WALL_DIAGONAL_NW -> thinWallDiagonalNW ?: DiagonalWallNWModel().also { thinWallDiagonalNW = it }
            THIN_WALL_DIAGONAL_SE -> thinWallDiagonalSE ?: DiagonalWallSEModel().also { thinWallDiagonalSE = it }
            THIN_WALL_DIAGONAL_SW -> thinWallDiagonalSW ?: DiagonalWallSWModel().also { thinWallDiagonalSW = it }
            THIN_WALL_EAST -> thinWallEast ?: makeThinWallEast().also { thinWallEast = it }
            THIN_WALL_NORTH -> thinWallNorth ?: makeThinWallNorth().also { thinWallNorth = it }
            THIN_WALL_SOUTH -> thinWallSouth ?: makeThinWallSouth().also { thinWallSouth = it }
            THIN_WALL_TOP_EAST -> thinWallTopEast ?: makeThinWallTopEast().also { thinWallTopEast = it }
            THIN_WALL_TOP_NORTH -> thinWallTopNorth ?: makeThinWallTopNorth().also { thinWallTopNorth = it }
            THIN_WALL_TOP_SOUTH -> thinWallTopSouth ?: makeThinWallTopSouth().also { thinWallTopSouth = it }
            THIN_WALL_TOP_WEST -> thinWallTopWest ?: makeThinWallTopWest().also { thinWallTopWest = it }
            THIN_WALL_WEST -> thinWallWest ?: makeThinWallWest().also { thinWallWest = it }
            UPRIGHT_BAR_NE -> upriteBarNE ?: makeUprightBarNE().also { upriteBarNE = it }
            UPRIGHT_BAR_NW -> upriteBarNW ?: makeUprightBarNW().also { upriteBarNW = it }
            UPRIGHT_BAR_SE -> upriteBarSE ?: makeUprightBarSE().also { upriteBarSE = it }
            UPRIGHT_BAR_SW -> upriteBarSW ?: makeUprightBarSW().also { upriteBarSW = it }
            UPRIGHT_DBL_BAR_NORTH -> upriteDblBarNorth ?: UprightDblBarNorthModel().also { upriteDblBarNorth = it }
            UPRIGHT_DBL_BAR_EAST -> upriteDblBarEast ?: UprightDblBarEastModel().also { upriteDblBarEast = it }
            UPRIGHT_DBL_BAR_SOUTH -> upriteDblBarSouth ?: UprightDblBarSouthModel().also { upriteDblBarSouth = it }
            UPRIGHT_DBL_BAR_WEST -> upriteDblBarWest ?: UprightDblBarWestModel().also { upriteDblBarWest = it }
            VERTICAL_BEVEL_FULL -> vertBevelFull ?: makeVerticalBevelFull().also { vertBevelFull = it }
            VERTICAL_BEVEL_FULL_ALT -> vertBevelFullAlt ?: makeVerticalBevelFullAlt().also { vertBevelFullAlt = it }
            VERTICAL_BEVEL_NORTH -> vertBevelNorth ?: makeVerticalBevelNorth().also { vertBevelNorth = it }
            VERTICAL_BEVEL_EAST -> vertBevelEast ?: makeVerticalBevelEast().also { vertBevelEast = it }
            VERTICAL_BEVEL_SOUTH -> vertBevelSouth ?: makeVerticalBevelSouth().also { vertBevelSouth = it }
            VERTICAL_BEVEL_WEST -> vertBevelWest ?: makeVerticalBevelWest().also { vertBevelWest = it }
            VERTICAL_BEVEL_NE -> vertBevelNE ?: makeVerticalBevelNE().also { vertBevelNE = it }
            VERTICAL_BEVEL_NW -> vertBevelNW ?: makeVerticalBevelNW().also { vertBevelNW = it }
            VERTICAL_BEVEL_SE -> vertBevelSE ?: makeVerticalBevelSE().also { vertBevelSE = it }
            VERTICAL_BEVEL_SW -> vertBevelSW ?: makeVerticalBevelSW().also { vertBevelSW = it }
            VERTICAL_CUT_NE -> vertCutNE ?: makeVerticalCutNE().also { vertCutNE = it }
            VERTICAL_CUT_NW -> vertCutNW ?: makeVerticalCutNW().also { vertCutNW = it }
            VERTICAL_CUT_SE -> vertCutSE ?: makeVerticalCutSE().also { vertCutSE = it }
            VERTICAL_CUT_SW -> vertCutSW ?: makeVerticalCutSW().also { vertCutSW = it }
            WINDING_STAIRS_EN -> windingStairsEN ?: makeWindingStairsEN().also { windingStairsEN = it }
            WINDING_STAIRS_ES -> windingStairsES ?: makeWindingStairsES().also { windingStairsES = it }
            WINDING_STAIRS_LOWER_EN -> windingStairsLoEN ?: makeWindingStairsLoEN().also { windingStairsLoEN = it }
            WINDING_STAIRS_LOWER_ES -> windingStairsLoES ?: makeWindingStairsLoES().also { windingStairsLoES = it }
            WINDING_STAIRS_LOWER_NE -> windingStairsLoNE ?: makeWindingStairsLoNE().also { windingStairsLoNE = it }
            WINDING_STAIRS_LOWER_NW -> windingStairsLoNW ?: makeWindingStairsLoNW().also { windingStairsLoNW = it }
            WINDING_STAIRS_LOWER_SE -> windingStairsLoSE ?: makeWindingStairsLoSE().also { windingStairsLoSE = it }
            WINDING_STAIRS_LOWER_SW -> windingStairsLoSW ?: makeWindingStairsLoSW().also { windingStairsLoSW = it }
            WINDING_STAIRS_LOWER_WN -> windingStairsLoWN ?: makeWindingStairsLoWN().also { windingStairsLoWN = it }
            WINDING_STAIRS_LOWER_WS -> windingStairsLoWS ?: makeWindingStairsLoWS().also { windingStairsLoWS = it }
            WINDING_STAIRS_NE -> windingStairsNE ?: makeWindingStairsNE().also { windingStairsNE = it }
            WINDING_STAIRS_NW -> windingStairsNW ?: makeWindingStairsNW().also { windingStairsNW = it }
            WINDING_STAIRS_SE -> windingStairsSE ?: makeWindingStairsSE().also { windingStairsSE = it }
            WINDING_STAIRS_SW -> windingStairsSW ?: makeWindingStairsSW().also { windingStairsSW = it }
            WINDING_STAIRS_UPPER_EN -> windingStairsHiEN ?: makeWindingStairsHiEN().also { windingStairsHiEN = it }
            WINDING_STAIRS_UPPER_ES -> windingStairsHiES ?: makeWindingStairsHiES().also { windingStairsHiES = it }
            WINDING_STAIRS_UPPER_NE -> windingStairsHiNE ?: makeWindingStairsHiNE().also { windingStairsHiNE = it }
            WINDING_STAIRS_UPPER_NW -> windingStairsHiNW ?: makeWindingStairsHiNW().also { windingStairsHiNW = it }
            WINDING_STAIRS_UPPER_SE -> windingStairsHiSE ?: makeWindingStairsHiSE().also { windingStairsHiSE = it }
            WINDING_STAIRS_UPPER_SW -> windingStairsHiSW ?: makeWindingStairsHiSW().also { windingStairsHiSW = it }
            WINDING_STAIRS_UPPER_WN -> windingStairsHiWN ?: makeWindingStairsHiWN().also { windingStairsHiWN = it }
            WINDING_STAIRS_UPPER_WS -> windingStairsHiWS ?: makeWindingStairsHiWS().also { windingStairsHiWS = it }
            WINDING_STAIRS_WN -> windingStairsWN ?: makeWindingStairsWN().also { windingStairsWN = it }
            WINDING_STAIRS_WS -> windingStairsWS ?: makeWindingStairsWS().also { windingStairsWS = it }
            WINDOW_TOP_L_NORTH -> windowTopLNorth ?: makeWindowTopLNorth().also { windowTopLNorth = it }
            WINDOW_TOP_L_EAST -> windowTopLEast ?: makeWindowTopLEast().also { windowTopLEast = it }
            WINDOW_TOP_L_SOUTH -> windowTopLSouth ?: makeWindowTopLSouth().also { windowTopLSouth = it }
            WINDOW_TOP_L_WEST -> windowTopLWest ?: makeWindowTopLWest().also { windowTopLWest = it }
            WINDOW_TOP_R_NORTH -> windowTopRNorth ?: makeWindowTopRNorth().also { windowTopRNorth = it }
            WINDOW_TOP_R_EAST -> windowTopREast ?: makeWindowTopREast().also { windowTopREast = it }
            WINDOW_TOP_R_SOUTH -> windowTopRSouth ?: makeWindowTopRSouth().also { windowTopRSouth = it }
            WINDOW_TOP_R_WEST -> windowTopRWest ?: makeWindowTopRWest().also { windowTopRWest = it }
        }
}
